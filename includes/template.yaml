  - binary_sensor:
      - name: "Shower in Usage"
        unique_id: shower_in_usage
        delay_off:
          minutes: 2
        state: >
          {{( states('binary_sensor.sensor_bathroom_door_contact') == 'off' and (states('sensor.sensor_bathroom_temperature_humidity') | float  ) > (states('sensor.average_house_humidity') | float + 15 )) }}

      - name: "All Present Sleeping"
        unique_id: all_present_sleeping
        delay_off:
          minutes: 0
        state: >
          {% if ( states('person.maximiliano') == 'home' and states('sensor.is_maxi_asleep') == 'asleep' ) and (states('person.active_sleeper_amount') != 0 and states('sensor.active_sleeper_rooms') | length  > 2 and states('sensor.active_sleeper_amount') >= states('sensor.total_amount_people_home') ) %}
            on
          {% else %}
            off
          {% endif %}


      - name: "All residents Sleeping"
        unique_id: all_residents_sleeping
        delay_off:
          minutes: 0
        state: >
            {% set myriam_sleeping_state = states('sensor.myriam_is_sleeping_at_home') %}
            {% set maxi_sleeping_state = states('sensor.is_maxi_asleep') %}
            {% set lylou_sleeping_state = states('sensor.is_lylou_asleep') %}

            {% set asleep_count = 
              [myriam_sleeping_state, maxi_sleeping_state, lylou_sleeping_state]
              | select('equalto', 'asleep') 
              | list 
              | length 
            %}
            {{ asleep_count >= 2 }}



          
      - name: "Sensor Patio Occupancy"
        state: >
         {{ not is_state('sensor.patio_camera_person_count', "0")
             or  is_state('binary_sensor.sensor_patio_motion_occupancy', 'on')
             or  is_state('binary_sensor.sensor_patio_ceiling_motion_occupancy', 'on')
             }}




      - name: "maxi is talking"
        unique_id: "maxi_is_talking" 
        state: >-
           {{ ( states('binary_sensor.computer_maxi_pc_computer_maxi_pc_microphoneactive') == "on" or not is_state('sensor.phone_maxi_phone_state', "idle")
              or states('sensor.phone_maxi_audio_mode') != 'normal'and states('person.maximiliano') == 'home'
            ) }}
      - name: "myriam_is_listening_at_home"
        unique_id: "myriam_is_listening_at_home" 
        state: >-
           {{ ( ( is_state('sensor.phone_myriam_media_session', "playing") and states('person.myriam') == 'home' ) 
              or states('sensor.phone_myriam_audio_mode') != 'normal'and states('person.myriam') == 'home'
            ) }}
      - name: "myriam is talking"
        unique_id: "myriam_is_talking" 
        state: >-
           {{ ( not is_state('sensor.phone_myriam_phone_state', "idle")
              or states('sensor.phone_myriam_audio_mode') != 'normal'and states('person.myriam') == 'home'
            ) }}

      - name: "maxi_is_listening_at_home"
        unique_id: "maxi_is_listening_at_home" 
        state: >-
            {{ ( is_state('sensor.phone_maxi_media_session', "Playing")
              or not is_state('sensor.phone_maxi_phone_state', "idle")
              or states('sensor.phone_maxi_audio_mode') != 'normal'and states('person.maximiliano') == 'home' ) }}
  - sensor:
      - name: "Average House Humidity"
        unique_id: "average_house_humidity"
        state: >-
             {{ integration_entities('mqtt')     
             |    select('search', '_temperature_humidity') 
             |    select('search', 'sensor_') 
             |    reject('search', 'calibration') 
             |    reject('search', 'calibration') 
             | expand
             | rejectattr('state', 'search', 'unavailable') 
             | list 
             | expand 
             | map(attribute='state')   
             | map('float')
             | list
             | average
             | round(2)}}
        unit_of_measurement: percents

      - name: "Outside Temperature with Fallback"
        unique_id: "outside_temperature_with_fallback"
        state: >-
                {% if states('sensor.sensor_outside_temperature_temperature') !='unavailable' %}
                {{ states('sensor.sensor_outside_temperature_temperature') }}
                {% elif  states('weather.weather_montreal_forecast') !='unavailable' %}
                  {{ state_attr('weather.weather_montreal_forecast','temperature') }}
                {% elif  states('weather.forecast_home') !='unavailable' %}
                  {{ state_attr('weather.forecast_home','temperature') }}
                {% endif %}
        unit_of_measurement: degrees

      - name: "Playing on Hotbox TV"
        state: >-
          {% if state_attr('media_player.hotbox_top_chromecast', 'media_series_title') %}
            {{ state_attr('media_player.hotbox_top_chromecast', 'media_series_title') }}
            S{{ state_attr('media_player.hotbox_top_chromecast', 'media_season') }}
            E{{ state_attr('media_player.hotbox_top_chromecast', 'media_episode') }}
          {% elif  state_attr('media_player.hotbox_top_chromecast', 'media_album_name') %}
           {{ state_attr('media_player.hotbox_top_chromecast', 'media_title') }}  -  {{ state_attr('media_player.hotbox_top_chromecast', 'media_album_name') }} by {{ state_attr('media_player.hotbox_top_chromecast', 'media_album_artist') }}
          {% elif  state_attr('media_player.hotbox_top_chromecast', 'media_title') %}
            {{ state_attr('media_player.hotbox_top_chromecast', 'media_title') }}
          {% endif %}
        unique_id: playing_on_hotbox_tv
      - name: "Playing on Patio TV"
        state: >-
          {% if state_attr('media_player.patio_chromecast', 'media_series_title') %}
            {{ state_attr('media_player.patio_chromecast', 'media_series_title') }}
            S{{ state_attr('media_player.patio_chromecast', 'media_season') }}
            E{{ state_attr('media_player.patio_chromecast', 'media_episode') }}
          {% elif  state_attr('media_player.patio_chromecast', 'media_album_name') %}
           {{ state_attr('media_player.patio_chromecast', 'media_title') }}  -  {{ state_attr('media_player.patio_chromecast', 'media_album_name') }} by {{ state_attr('media_player.patio_chromecast', 'media_album_artist') }}
          {% elif  state_attr('media_player.patio_chromecast', 'media_title') %}
            {{ state_attr('media_player.patio_chromecast', 'media_title') }}
          {% endif %}
        unique_id: playing_on_patio_tv
      - name: "Playing on lounge TV"
        state: >-
          {% if state_attr('media_player.lounge_chromecast', 'media_series_title') %}
            {{ state_attr('media_player.lounge_chromecast', 'media_series_title') }}
            S{{ state_attr('media_player.lounge_chromecast', 'media_season') }}
            E{{ state_attr('media_player.lounge_chromecast', 'media_episode') }}
          {% elif  state_attr('media_player.lounge_chromecast', 'media_album_name') %}
           {{ state_attr('media_player.lounge_chromecast', 'media_title') }}  -  {{ state_attr('media_player.lounge_chromecast', 'media_album_name') }} by {{ state_attr('media_player.lounge_chromecast', 'media_album_artist') }}
          {% elif  state_attr('media_player.lounge_chromecast', 'media_title') %}
            {{ state_attr('media_player.lounge_chromecast', 'media_title') }}
          {% endif %}
        unique_id: playing_on_lounge_tv
      - name: "Minutes since boot"
        state: >
          {{ (as_timestamp(now()) - as_timestamp(states('sensor.uptime'))) // 60|int }}
        unique_id: minutes_since_boot
      - name: "Security All Clear"
        unique_id: security_all_clear
        state: >-
          {% if is_state('lock.lock_front_door', 'locked') and is_state('lock.back_door', 'locked') and (states.alarm_control_panel.home_alarm.state == "disarmed")  %}
            Clear
          {% elif is_state('alarm_control_panel.home_alarm', 'triggered') %}
            Alarm Triggered
          {% elif is_state('lock.lock_front_door', 'unlocked') or  is_state('lock.back_door', 'unlocked') %}
            Door Unlocked
          {% elif is_state('alarm_control_panel.home_alarm', 'armed_away') %}
            Armed Away
          {% elif is_state('alarm_control_panel.home_alarm', 'armed_home') %}
            Armed Home
          {% else %}
            Edgecase
          {% endif %}
        icon: >-
          {% if is_state('lock.lock_front_door', 'locked') and is_state('lock.back_door', 'locked') and (states.alarm_control_panel.home_alarm.state == "disarmed")  %}
            mdi:shield-home
          {% elif is_state('alarm_control_panel.home_alarm', 'triggered') %}
            mdi:alarm-light
          {% elif is_state('lock.lock_front_door', 'unlocked') or  is_state('lock.back_door', 'unlocked') %}
            mdi:door-open
          {% elif is_state('alarm_control_panel.home_alarm', 'armed_away') %}
            mdi:shield-lock
          {% elif is_state('alarm_control_panel.home_alarm', 'armed_home') %}
            mdi:shield-account
          {% else %}
            mdi:microsoft-edge-legacy
          {% endif %}
          


      - name: "Playing on Hotbox Down TV"
        state: >-
          {% if state_attr('media_player.hotbox_down_chromecast', 'media_series_title') %}
            {{ state_attr('media_player.hotbox_down_chromecast', 'media_series_title') }}
            S{{ state_attr('media_player.hotbox_down_chromecast', 'media_season') }}
            E{{ state_attr('media_player.hotbox_down_chromecast', 'media_episode') }}
          {% elif  state_attr('media_player.hotbox_down_chromecast', 'media_album_name') %}
           {{ state_attr('media_player.hotbox_down_chromecast', 'media_title') }}  -  {{ state_attr('media_player.hotbox_down_chromecast', 'media_album_name') }} by {{ state_attr('media_player.hotbox_down_chromecast', 'media_album_artist') }}
          {% elif  state_attr('media_player.hotbox_down_chromecast', 'media_title') %}
            {{ state_attr('media_player.hotbox_down_chromecast', 'media_title') }}
          {% endif %}
        unique_id: playing_on_hotbox_down_tv


        
      - name: "Playing on workshop TV"
        unique_id: playing_on_livingoom_tv
        state: >-
          {# Displays the current media information of the workshop Chromecast. It checks for different types of media and formats them accordingly #}
          {% if state_attr('media_player.workshop_chromecast', 'media_series_title') %}
            {#  Prints the TV show's title, season number, and episode number when playing a video file. #}
            {{ state_attr('media_player.workshop_chromecast', 'media_series_title') }}: S{{ state_attr('media_player.workshop_chromecast', 'media_season') }} E{{ state_attr('media_player.workshop_chromecast', 'media_episode') }}
          {%	elif  state_attr('media_player.workshop_chromecast', 'media_album_name') %}
          {#  Prints the song's title, album name, and artist when playing an audio file. #}
            {{ state_attr('media_player.workshop_chromecast', 'media_title') }}  -  {{ state_attr('media_player.workshop_chromecast', 'media_album_name') }} by {{ state_attr('media_player.workshop_chromecast', 'media_album_artist') }}
          {%	elif  state_attr('media_player.workshop_chromecast', 'media_title') %}
            {# Prints the current media title when neither a TV show nor an audio file is playing. #}
            {{ state_attr('media_player.workshop_chromecast', 'media_title') }}
          {% endif %}


  
      - name: "Guest WiFi Count"
        state: >-
          {{ states('sensor.chilling_hotspot_client_count')}}
        unit_of_measurement: guests
        unique_id: guest_wifi_count

      - name: "Day Of The Week"
        state: >-
            {{ utcnow().weekday() }}
        unique_id: day_of_the_week

      - name: 'Bathroom Usage' 
        state: >-
          {% if states('binary_sensor.shower_in_usage') == "on" %}
            Showering
          {% elif  states('binary_sensor.sensor_bathroom_door_contact') == "off" %}
            Occupied
          {% elif  states('binary_sensor.sensor_bathroom_motion_occupancy') == "on" %}
            Detected
          {% elif  states('binary_sensor.sensor_bathroom_motion_occupancy') == "off" %}
            Clear
          {% endif %}
        icon: >-
          {% if states('binary_sensor.shower_in_usage') == "on" %}
            mdi:shower-head
          {% elif  states('binary_sensor.sensor_bathroom_door_contact') == "off" %}
            mdi:paper-roll-outline
          {% elif  states('binary_sensor.sensor_bathroom_motion_occupancy') == "on" %}
            mdi:run
          {% elif  states('binary_sensor.sensor_bathroom_motion_occupancy') == "off" %}
            mdi:walk
          {% endif %}  
        unique_id: bathroom_usage    

      - name: 'Timer Remaining'  
        unit_of_measurement: Minutes
        state: >-
          {% if states('timer.cooking') == "active" %}
          {{ ( ( state_attr('timer.cooking', 'finishes_at') | as_timestamp() - utcnow() | as_timestamp() ) / 60 )| round }}
          {% else %}0
          {% endif %}
        unique_id: timer_remaining


      - name: "average_unmuted_speakers_volume"
        unique_id: "average_unmuted_speakers_volume"
        state: >-
          {% set array = states.media_player 
          | selectattr('entity_id', 'search', 'speakers') 
          | selectattr('entity_id', 'search', 'universal') 
          | rejectattr('attributes.volume_level', 'eq', null) 
          | rejectattr('entity_id', 'search', 'following|home|group') 
          | rejectattr('attributes.is_volume_muted', 'eq', True) 
          | selectattr('state', 'eq', 'playing') 
          | map(attribute='attributes.volume_level') 
          | list%}
          {% if array != [] %}
          {{ array | average }}
          {% elif array == [] %}
          0
          {% endif %}
        unit_of_measurement: percents

      - name: "Existing Rooms"
        unique_id: "existing_rooms"
        state: >-
          {% set areas = states  | selectattr('attributes.device_class', 'defined')   | map(attribute='entity_id')  | map('area_id') | unique | reject('none') | list %}
          {{ areas }}

      - name: "current time"
        unique_id: "current_time"
        state: >-
          {{now().strftime('%H:%M %p')}}
      - name: "Closet Lights Brightness"
        unique_id: "closet_lights_brightness" 
        state: >-
          {% if state_attr('light.group_closet_lights', 'brightness')  %}
            {{ state_attr('light.group_closet_lights', 'brightness') }}
           {% else %}
              1
          {% endif %}
      - name: "Playing on Bedroom Speaker"
        unique_id: "playing_on_bedroom_speaker" 
        state: >-
          {% if state_attr('media_player.bedroom_speaker', 'media_series_title') %}
            {{ state_attr('media_player.bedroom_speaker', 'media_series_title') }}
          {% elif  state_attr('media_player.bedroom_speaker', 'media_album_name') %}
           {{ state_attr('media_player.bedroom_speaker', 'media_title') }}  -  {{ state_attr('media_player.bedroom_speaker', 'media_album_name') }} by {{ state_attr('media_player.bedroom_speaker', 'media_artist') }}
          {% elif  state_attr('media_player.bedroom_speaker', 'media_title') %}
            {{ state_attr('media_player.bedroom_speaker', 'media_title') }}
           {% elif  state_attr('media_player.bedroom_speaker', 'app_name') %}
            {{ state_attr('media_player.bedroom_speaker', 'app_name') }}
          {% endif %}
      - name: "Playing on home group Speaker"
        unique_id: "playing_on_home_group_speaker" 
        state: >-
          {% if state_attr('media_player.universal_home_speakers', 'media_series_title') %}
            {{ state_attr('media_player.universal_home_speakers', 'media_series_title') }}
          {% elif  state_attr('media_player.universal_home_speakers', 'media_album_name') %}
           {{ state_attr('media_player.universal_home_speakers', 'media_title') }}  -  {{ state_attr('media_player.group_home_speakers', 'media_album_name') }} by {{ state_attr('media_player.group_home_speakers', 'media_artist') }}
          {% elif  state_attr('media_player.universal_home_speakers', 'media_title') %}
            {{ state_attr('media_player.universal_home_speakers', 'media_title') }}
           {% elif  state_attr('media_player.universal_home_speakers', 'app_name') %}
            {{ state_attr('media_player.universal_home_speakers', 'app_name') }}
          {% endif %}

      - name: "Maxi Location"
        unique_id: "maxi_location" 
        state: >-            
            {% set braceletroom = states('sensor.b7bracelet1') %}
            {% set watchroom = states('sensor.watch_galaxy4') %}
            {% set watchonbody = states('binary_sensor.galaxy_watch_4_on_body_sensor') %}
            {% set phoneroom = states('sensor.phone_fold4') %}
            {% set gpslocation = states('device_tracker.phone_maxi') %}

              {% if watchonbody == "on" and watchroom != "not_home" %}                   
                {% set location = watchroom %}
              {% elif braceletroom != "not_home" %}      
                {% set location = braceletroom %}
              {% elif phoneroom != "not_home" %}
                {% set location = phoneroom %}
              {% elif gpslocation != "not_home"%}
                {% set location = "At " + gpslocation %}
              {% else %}
                {% set location = unkown %}
              {% endif %}
              {{ location }}

      - name: "Maxis Current Game"
        unique_id: "maxi_current_game" 
        state: >-
            {% if state_attr('sensor.maxi1134_8202', 'game') %}
            {{ state_attr('sensor.maxi1134_8202', 'game') }}
            {% elif  state_attr('sensor.steam_maxi', 'game') %}
            {{state_attr('sensor.steam_maxi', 'game')}}
            {% else %} idle
            {% endif %}
      - name: "Maxis Current Discord Game"
        unique_id: "maxi_curent_discord_game" 
        state: >-
            {% if state_attr('sensor.maxi1134_8202', 'game') %}
            {{ state_attr('sensor.maxi1134_8202', 'game') }}
            {% else %}idle
            {% endif %}
      - name: "Maxis Current Steam Game"
        unique_id: "maxi_current_steam_game" 
        state: >-
            {% if  state_attr('sensor.steam_maxi', 'game') %}
            {{state_attr('sensor.steam_maxi', 'game')}}
            {% else %}idle
            {% endif %} 

      - name: "amount partners home"
        unique_id: "amount_partners_home"
        state: >-
            {% set ns = namespace(total_partners = 0) %} {# set namespace user amount at 0 #}
            {% for person in states.person %} {# iterate over existing persons #}
            {% if "partners" in person.entity_id | labels() and person.state == "home"  %}
              {% set ns.total_partners = ns.total_partners + 1 %}
            {% endif %}
            {% endfor %}            
            {{ ns.total_partners }}{# output total_partners at home #}      
        unit_of_measurement: "partners"

      - name: "amount people crashing at home"
        unique_id: "amount_crashing_home"
        state: >-
            {% set ns = namespace(crashers = 0) %} {# set namespace user amount at 0 #}
            {% for person in states.person %} {# iterate over existing persons #}
            {% if "crashers" in person.entity_id | labels() and person.state == "home"  %}
              {% set ns.crashers = ns.crashers + 1 %}
            {% endif %}
            {% endfor %}            
            {{ ns.crashers }}{# output crashers at home #}      
        unit_of_measurement: "crashers"

        
      - name: "amount residents at home"
        unique_id: "amount_residents_home"
        state: >-
            {% set ns = namespace(crashers = 0) %} {# set namespace user amount at 0 #}
            {% for person in states.person %} {# iterate over existing persons #}
            {% if "residents" in person.entity_id | labels() and person.state == "home"  %}
              {% set ns.crashers = ns.crashers + 1 %}
            {% endif %}
            {% endfor %}            
            {{ ns.crashers }}{# output residents at home #}      
        unit_of_measurement: "residents"

      - name: "amount friends home"
        unique_id: "amount_friends_home"
        state: >-
            {# Set friendshome to the amount of friends #}
            {% set ns = namespace(friends=0) %}
             {% for device_tracker in states.device_tracker | selectattr('state','eq','home')  | selectattr('entity_id','search',"phone_") %}
              {% if  state_attr(device_tracker.entity_id, "essid") == "Chilling Hotspot" and 'phone' in device_tracker.entity_id  %}
               {% set ns.friends = ns.friends  + 1 %}
              {% endif %}
             {% endfor %}
             {% set friendshome = ns.friends  | int - states('sensor.amount_partners_home') | int - states('sensor.amount_crashing_home') | int  %}
             {{friendshome}}
        unit_of_measurement: "friends"
        attributes:
          friends: >
            {% set ns = namespace(friends=[]) %}
            {% for device_tracker in states.device_tracker | selectattr('state','eq','home')  | selectattr('entity_id','search',"phone_") %}
              {% if  state_attr(device_tracker.entity_id, "essid") == "Chilling Hotspot" and 'phone' in device_tracker.entity_id  %}
               {% set name  = device_tracker.entity_id | replace('device_tracker.phone_','') | replace('_',' ') | capitalize  %}
              {% set ns.friends = ns.friends  + [name] %}
             {% endif %}
            {% endfor %}
            {{ ns.friends }}



      - name: "Chilling Hotspot devices"
        unique_id: "which_devices_hotspot"
        state: >-
            {% set ns = namespace(friends=[]) %}
            {% for device_tracker in states.device_tracker | selectattr('state','eq','home')   %}
             {% if  state_attr(device_tracker.entity_id, "essid") == "Chilling Hotspot" %}
               {% set name  = device_tracker.entity_id   %}
              {% set ns.friends = ns.friends  + [name] %}
             {% endif %}
            {% endfor %}
            {{ ns.friends }}

      - name: "which friends home"
        unique_id: "which_friends_home"
        state: >-
          {{ state_attr('sensor.amount_friends_home', "friends") | list  }}

      - name: "amount people home"
        unique_id: amount_people_home
        state: >-
             {# Set peoplehome to the amount of people #}
             {% set peoplehome = states('sensor.amount_friends_home') | int + states('sensor.amount_partners_home') | int + states('sensor.amount_crashing_home') | int  %} 
             {{peoplehome}}
        unit_of_measurement: "person(s)"
        
      - name: "total amount people home"
        unique_id: total_amount_people_home
        state: >-                     
             {# Set peoplehome to the amount of people #}
             {% set peoplehome = states('sensor.amount_friends_home') | int + states('sensor.amount_partners_home') | int + states('sensor.amount_crashing_home') | int  %} 
             {% if states('person.maximiliano') == "home" %}
             {% set peoplehome = peoplehome +1 %}
             {% endif %}
             {{peoplehome}}

      

      - name: "last active room"
        unique_id: last_active_room
        state: >-
              {% set sensors = integration_entities('group')     
              | select('search', 'motion_occupancy')  
              | reject('search', 'group_hotbox_motion_occupancy') 
              | select('is_state','on') 
              | list 
              %}
  
              {{ area_name(expand(sensors) 
              | sort(reverse=true, attribute="last_changed") 
              | map(attribute='entity_id') 
              | list 
              | first 
              | default(this.state | default(None))) | lower }}


      - name: "active_sleeper_rooms"
        unique_id: "active_sleeper_rooms"
        state: >-
            {% set ns = namespace(active_sleeper_rooms = []) %}  {# create a namespace object to store variables #}
            {%- for boolean in states.input_boolean -%} 
              {% if boolean.state == "on" and "input_boolean.sleeper_" in boolean.entity_id %} 
                {% set sensor = boolean.entity_id | replace('input_boolean.sleeper_in_','') %}
                  {% set ns.active_sleeper_rooms = ns.active_sleeper_rooms + [sensor] %}
              {%- endif %}
            {% endfor %}
            {{ ns.active_sleeper_rooms }}

      - name: "active_sleepers"
        unique_id: "active_sleepers"
        state: >-
          {{ states.input_boolean | selectattr('state','eq','on') | selectattr('entity_id','search',"input_boolean.sleeper_") | list | count }}
        attributes:
          rooms: >
            {% set ns = namespace(items=[]) %}
            {% for inp in states.input_boolean | selectattr('state','eq','on') | selectattr('entity_id','search',"input_boolean.sleeper_") %}
              {% set ns.items = ns.items  + [ (loop.index, inp.entity_id  | replace('input_boolean.sleeper_in_','') ) ] %}
            {% endfor %}
            {{ dict.from_keys(ns.items) }}

      - name: "active_sleeper_amount"
        unique_id: "active_sleeper_amount"
        state: >-
            {{ states('sensor.active_sleeper_rooms') | wordcount }}


      - name: "active microphones rooms"
        unique_id: "active_microphones_rooms"
        state: >-
            {% set ns = namespace(active_micro_room = []) %}  {# create a namespace object to store variables #}
            {% if states('binary_sensor.computer_maxi_pc_computer_maxi_pc_microphoneactive') == "on" %}
              {% set ns.active_micro_room = ns.active_micro_room + ["hotbox"] %}
            {% endif %}
            {% if states('sensor.phone_maxi_phone_state') != 'idle' and states('person.maximiliano') == 'home' %}            
              {% set ns.active_micro_room = ns.active_micro_room + [ states('sensor.maxi_location_by_petro')] %}
            {% endif %}
            {% if states('sensor.phone_maxi_audio_mode') != 'normal'and states('person.maximiliano') == 'home' %}            
              {% set ns.active_micro_room = ns.active_micro_room + [ states('sensor.maxi_location_by_petro')] %}
            {% endif %}
            {{ ns.active_micro_room | unique | list }}
      - name: "active_chromecast_rooms"
        unique_id: "active_chromecast_rooms"
        state: >-
            {{ integration_entities('universal')     |    select('search', 'chromecast') |  select('is_state','playing') | list | expand     | rejectattr('entity_id', 'search', 'home') | map(attribute='entity_id') | unique | list | replace('media_player.universal_','') | replace('_chromecast','')   }}
        attributes:
          muted_rooms: >-
            {{ integration_entities('universal')     |    select('search', 'chromecast') | select('is_state','playing') | list | expand |  selectattr('attributes.is_volume_muted', 'eq', true)     | rejectattr('entity_id', 'search', 'home') | map(attribute='entity_id')| unique | list | replace('media_player.universal_','')  | replace('_chromecast','')  }}
          unmuted_rooms: >-
            {{ integration_entities('universal')     |    select('search', 'chromecast') | select('is_state','playing') | list | expand |  selectattr('attributes.is_volume_muted', 'eq', false)  | rejectattr('entity_id', 'search', 'home')    | map(attribute='entity_id')| unique| list | replace('media_player.universal_','')  | replace('_chromecast','')  }}

      - name: "active_speakers_rooms"
        unique_id: "active_speakers_rooms"
        state: >-
            {{ integration_entities('universal')     |    select('search', 'speakers') |  select('is_state','playing') | list | expand     | rejectattr('entity_id', 'search', 'home') | map(attribute='entity_id') | unique | list | replace('media_player.universal_','') | replace('_speakers','')   }}
        attributes:
          muted_rooms: >-
            {{ integration_entities('universal')     |    select('search', 'speakers') | select('is_state','playing') | list | expand |  selectattr('attributes.is_volume_muted', 'eq', true)     | rejectattr('entity_id', 'search', 'home') | map(attribute='entity_id')| unique | list | replace('media_player.universal_','')  | replace('_speakers','')  }}
          unmuted_rooms: >-
             {{ integration_entities('universal')     |    select('search', 'speakers') | select('is_state','playing') | list | expand |  selectattr('attributes.is_volume_muted', 'eq', false)  | rejectattr('entity_id', 'search', 'home')    | map(attribute='entity_id')| unique| list | replace('media_player.universal_','')  | replace('_speakers','')  }}




      - name: "active_motion_rooms"
        unique_id: "active_motion_rooms"
        state: >-
            {% set ns = namespace(mediaactiverooms = []) %}  {# create a namespace object to store variables #}
            {% for motion_sensor in states.binary_sensor -%} 
              {%- if  "occupancy" in motion_sensor.entity_id -%}  
                {%- if motion_sensor.state == 'on' -%}
                {% set currentroomname = area_name(motion_sensor.entity_id)  %}
                  {%- set ns.mediaactiverooms = ns.mediaactiverooms + [currentroomname] -%}   
                {%- endif -%}
              {%- endif -%}
            {% endfor %} 
            {{ ns.mediaactiverooms | unique | list}}

        

      - name: "active_media_playback"
        unique_id: "active_media_playback"
        state: >-
              {% set speakers = integration_entities('universal')     
              | select('search', 'speakers') 
              | select('is_state','playing') 
              | list 
              | expand   
              | rejectattr('entity_id', 'search', 'home') 
              | map(attribute='entity_id')
              | unique 
              | map('regex_replace', 'media_player.universal_', '') 
              | map('regex_replace', '_speakers', '')
              |list
              %}            
              {% set chromecasts = integration_entities('universal')     
              | select('search', 'chromecast') 
              | select('is_state','playing') 
              | list 
              | expand   
              | rejectattr('entity_id', 'search', 'home') 
              | map(attribute='entity_id') 
              | unique 
              | map('regex_replace', 'media_player.universal_', '') 
              | map('regex_replace', '_chromecast', '')
              | map('regex_replace', '_top', '')
              | map('regex_replace', '_bottom', '')
              |list
              %}
              {{ (speakers + chromecasts) | unique | list  | length > 0 }}
        attributes:
          speakers: >-
              {{ integration_entities('universal')     
              | select('search', 'speakers') 
              | select('is_state','playing') 
              | list 
              | expand   
              | rejectattr('entity_id', 'search', 'home') 
              | map(attribute='entity_id') 
              | unique 
              | map('regex_replace', 'media_player.universal_', '') 
              | map('regex_replace', '_speakers', '')
              |list
               }}      
          chromecasts: >-
              {{ integration_entities('universal')     
              | select('search', 'chromecast') 
              | select('is_state','playing') 
              | list 
              | expand   
              | rejectattr('entity_id', 'search', 'home') 
              | map(attribute='entity_id') 
              | unique 
              | map('regex_replace', 'media_player.universal_', '') 
              | map('regex_replace', '_chromecast', '')
              |list
              }}      

      - name: Is lylou asleep?
        unique_id: "is_lylou_asleep"
        state: >
            {% set phone_interactive = states('binary_sensor.phone_lylou_interactive') %}
            {% set sleep_confidence = states('sensor.phone_lylou_sleep_confidence') | int %}
            {% set computer_state = states('device_tracker.computer_lylou') %}
            {% set light_state  = states('light.group_hotbox_lights') %}
            {% set lylou_home = states('person.lylou') %}
            {% set sleepingstate = "awake" %}
            {% if  lylou_home == 'home' %}
            {% if phone_interactive == 'off' and light_state == 'off' and sleep_confidence > 80 and computer_state == 'not_home' %}
                {% set sleepingstate = "asleep" %}
            {% elif phone_interactive == 'off' and light_state == 'off' and sleep_confidence > 90 %}
                {% set sleepingstate = "asleep" %}
            {% elif phone_interactive == 'off' and light_state == 'off' and computer_state == 'not_home'  %}
                {% set sleepingstate = "asleep" %}
            {% endif%}
            {% endif%}
            {{ sleepingstate }}


      - name: Is myriam asleep?
        unique_id: "is_myriam_asleep"
        state: >
            {% set room = states('sensor.myriam_location_by_petro') %}  {# get the current myriam location sensor state #}
            {% set sleeperamount = states('sensor.active_sleeper_amount') | int %}
            {% set activesleeperrooms = states('sensor.active_sleeper_rooms') %}
            {% set lasttvactiveroom = states('sensor.last_active_room') %}
            {% set phone_sleep_confidence = states('sensor.phone_myriam_sleep_confidence') | int %}
            {% set sleepingstate = "awake" %}
                {% if states('binary_sensor.myriam_alone') == "on" %}
                    {# if the myriam_alone sensor is on, indicating there is only myriam present #}
                    {% if sleeperamount > 1 %}
                        {# if there is more than one "sleeper" input_boolean that is "on" #}
                        {% if room in activesleeperrooms %}
                            {% set sleepingstate = "asleep" %}
                        {% elif lasttvactiveroom in activesleeperrooms  %}
                           {% set sleepingstate = "asleep" %}
                        {% endif %}
                    {% elif sleeperamount == 1 %}
                        {# if there is only one "sleeper" input_boolean that is "on" #}
                        {% set sleepingstate = "asleep" %}   {# set the roomname to the only "sleeper" input_boolean that is "on" #}
                    {% endif %}
                {% elif states.binary_sensor.myriam_alone.state == "off" and room in activesleeperrooms and room != '' %}
                    {# if the myriam_alone sensor is off, it indicates that there is more than myriam present #}
                    {% set sleepingstate = "asleep" %}
                {% elif states.person.myriam.state != "home" %}             {# if myriam is not home #}
                    {# check phone sleep confidence to determine if I am sleeping #}
                    {% if phone_sleep_confidence > 94  %}
                        {# Assume myriam is sleeping if confidence is over 94% #}
                        {% set sleepingstate = "asleep" %} {# set sleeping  state as asleep #}
                    {% endif %}
                {% endif %}
            {{ sleepingstate }}


      - name: Myriam is sleeping at home?
        unique_id: "myriam_is_sleeping_at_home"
        state: >            
            {% set sleeping_state = states('sensor.is_myriam_asleep') %}  
            {% set myriam_home = states('person.myriam') %}
                {% if myriam_home == "home" and sleeping_state == "asleep" %}
                  asleep
                {% else %}
                  awake                  
                {% endif %}

      - name: Is maxi asleep?
        unique_id: "is_maxi_asleep"
        state: >
            {% set room = states('sensor.maxi_location_by_petro') %}  {# get the current maxi location sensor state #}
            {% set sleeperamount = states('sensor.active_sleeper_amount') | int %}
            {% set activesleeperrooms = states('sensor.active_sleeper_rooms') %}
            {% set lasttvactiveroom = states('sensor.last_active_room') %}
            {% set phone_sleep_confidence = states('sensor.phone_maxi_sleep_confidence') | int %}
            {% set sleepingstate = "awake" %}
                {% if states('binary_sensor.maxi_alone') == "on" %}
                    {# if the maxi_alone sensor is on, indicating there is only maxi present #}
                    {% if sleeperamount > 1 %}
                        {# if there is more than one "sleeper" input_boolean that is "on" #}
                        {% if room in activesleeperrooms %}
                            {% set sleepingstate = "asleep" %}
                        {% elif lasttvactiveroom in activesleeperrooms  %}
                           {% set sleepingstate = "asleep" %}
                        {% endif %}
                    {% elif sleeperamount == 1 %}
                        {# if there is only one "sleeper" input_boolean that is "on" #}
                        {% set sleepingstate = "asleep" %}   {# set the roomname to the only "sleeper" input_boolean that is "on" #}
                    {% endif %}
                {% elif states.binary_sensor.maxi_alone.state == "off" and room in activesleeperrooms %}
                    {# if the maxi_alone sensor is off, it indicates that there is more than maxi present #}
                    {% set sleepingstate = "asleep" %}
                {% elif states.person.maximiliano.state != "home" %}             {# if maxi is not home #}
                    {# check phone sleep confidence to determine if I am sleeping #}
                    {% if phone_sleep_confidence > 94  %}
                        {# Assume I am sleeping if confidence is over 94% #}
                        {% set sleepingstate = "asleep" %} {# set sleeping  state as asleep #}
                    {% endif %}
                {% endif %}
            {{ sleepingstate }}
        attributes:
          location: >
            {% set room = states.sensor.maxi_location.state %}  {# get the current maxi location sensor state #}
            {% set sleeperamount = states('sensor.active_sleeper_amount') | int %}
            {% set activesleeperrooms = states('sensor.active_sleeper_rooms') %}
            {% set lasttvactiveroom = states('sensor.last_active_room') %}  
            {% set maxilocation = states('sensor.maxi_location_by_petro') %}
            {% set phone_sleep_confidence = states('sensor.phone_maxi_sleep_confidence') | int %}
            {% set sleepingspot = "" %}
              {% if states.binary_sensor.maxi_alone.state == "on" %}  {# if the maxi_alone sensor is on, indicating there is only maxi present #}
                {% if sleeperamount > 1 %}  {# if there is more than one "sleeper" input_boolean that is "on" #}
                {% if room in activesleeperrooms %}
                    {% set sleepingspot = room %}
                  {% elif lasttvactiveroom in activesleeperrooms  %}
                    {% set sleepingspot = lasttvactiveroom %}
                  {% else %}
                  {# this below code set sleepingspots as the last sleeper that eas turned on#}
                  {% set sleepingspot =  states.input_boolean | selectattr('state','eq','on') | selectattr('entity_id','search',"input_boolean.sleeper_") | sort(attribute='last_updated', reverse=True) | map(attribute="entity_id") | first | default | replace("input_boolean.sleeper_in_","") %}  
                  {% endif %}
              
                {% elif sleeperamount == 1 %}  {# if there is only one "sleeper" input_boolean that is "on" #}
                  {% set sleepingspot =  states.sensor.active_sleepers.attributes.rooms.1%}  {# set the roomname to the only "sleeper" input_boolean that is "on" #}
                {% endif %}  
              
              {% elif states.binary_sensor.maxi_alone.state == "off" and states.person.maximiliano.state == "home" %}  {# if the maxi_alone sensor is off, it indicates that there is more than maxi present #}
                  {# this below code set sleepingspots as the last sleeper that was turned on#}
                  {% set last_sleeping_spot = states.input_boolean | selectattr('state','eq','on') | selectattr('entity_id','search',"input_boolean.sleeper_") | sort(attribute='last_updated', reverse=True) | map(attribute="entity_id") | first | default | replace("input_boolean.sleeper_in_","") %}  
                    {% if maxilocation in activesleeperrooms | string   %}
                      {% set sleepingspot = maxilocation %}
                    {% elif last_sleeping_spot == maxilocation %}                    
                      {% set sleepingspot = last_sleeping_spot %}
                    {% endif %}
              {% elif states.person.maximiliano.state != "home" %}  {# if maxi is not home #}
                  {# check phone sleep confidence to determine if I am sleeping #}
                  {% if phone_sleep_confidence > 94  %} {# Assume I am sleeping if confidence is over 94% #}
                    {% set sleepingspot = maxilocation %} {# set sleeping spot at current outside of home location #}
                  {% endif %}
              {% endif %}
            {{ sleepingspot }}
            
      - name: "Where is maxi sleeping?"
        unique_id: where_is_maxi_sleeping
        state: >-
          {{ state_attr('sensor.is_maxi_asleep', "location") | default('nowhere') }}

      - name: "Is the computer active?"
        unique_id: is_computer_active
        state: >-
          {{ not (  now()|as_timestamp   - states('sensor.computer_maxi_pc_computer_maxi_pc_lastactive') | as_timestamp ) > 400}}
      - name: "Maxi current Activity V2"
        unique_id: maxi_current_activity_v2
        state: >-  
            {% set ns = namespace( activityname="unsure", mediaactiverooms=[],lasttvactiveroom = states("sensor.last_active_room"), active_sleepers_amount=0, allowed_ids=[],active_sleeper_rooms=[], motion_sensors=[], room = states.sensor.maxi_location.state, active_motion_sensors = [] ) %}  {# create a namespace object to store variables #}
            {% set room = states("sensor.maxi_location_by_petro") | lower  %}
            {% set shower_in_usage = states("binary_sensor.shower_in_usage") %}
            {% set is_computer_active = states("sensor.is_computer_active") %}
            {% set is_maxi_home = states("person.maximiliano") == "home" %}
            {% set is_maxi_alone = states("binary_sensor.maxi_alone") %}
            {% set party_mode = states("input_boolean.party_mode") %}
            {% set vacuum_cleaning = states("vacuum.xiaomi_vacuum_cleaner") != 'docked' %}
            {% set kink_mode = states("input_boolean.kink_party") %}
            {% set lounge_desk_in_use = states("binary_sensor.sensor_lounge_desk_fp2_occupancy") == "on" %}
            {% set phone_in_use = states('binary_sensor.phone_maxi_device_locked') == 'false' %}
            {% set cooking_mode = states("input_boolean.cooking_mode") %}
            {% set partnershome = states("sensor.amount_partners_home") | int  %}
            {% set friendshome = states("sensor.amount_friends_home") | int  %} {# Set friendshome to the amount of people #} 
            {% set totalpeoplehome = states("sensor.total_amount_people_home") | int   %}
            {% set crashershome = states("sensor.amount_crashing_home") | int   %}{# Set peoplehome to the amount of people #}
            {% set ns.active_sleepers_amount = states("sensor.active_sleeper_amount") | int %}
            {% set is_maxi_sleeping = states("sensor.is_maxi_asleep") %}
            {% set maxis_current_game = states("sensor.maxis_current_game") %}
            {% set ns.active_chromecasts_room = state_attr("sensor.active_media_playback", "chromecasts")  %} 
            {% set ns.active_speakers_room = state_attr('sensor.active_media_playback', 'speakers')  %}   
            {# code down here, variables up there #}
            {% if is_maxi_sleeping  == "asleep" %}  {# if the maxi_alone sensor is on, indicating there is only maxi present #}
              {%set ns.activityname = "Sleeping"%}
            {% elif is_maxi_home == false %}
              {%set ns.activityname = "Adventuring"%}
            {% elif is_maxi_alone == "on" %}
              {% if is_computer_active  == "True" and room == "hotbox" %}
                  {% if maxis_current_game != "idle" %}
                    {%set ns.activityname = "Gaming"%}
                  {% else %}                    
                    {%set ns.activityname = "Using the Computer"%}
                  {% endif %}              
              {% elif ns.active_chromecasts_room | length > 0 and room in ns.active_chromecasts_room%}    
                {% set ns.activityname = "Watching TV"  %}                    
              {% elif shower_in_usage == "on" %}                                               
                {% set ns.activityname = "Showering" %}
              {% elif ns.active_speakers_room | length > 0 and room in ns.active_speakers_room%}    
                {% set ns.activityname = "Listening to Music"  %}             
              {% elif cooking_mode == "on" and room == "kitchen" %}                                     
                {% set ns.activityname = "Cooking" %}    
              {% elif phone_in_use == true %}                               
                {% set ns.activityname = "Using Phone" %}        
              {% elif vacuum_cleaning == true %}                               
                {% set ns.activityname = "Cleaning" %}             
              {% endif %}
            {% elif friendshome > 0 %}
              {% if party_mode == "on" %}                                    
                {% set ns.activityname = "Partying" %}   
              {% elif kink_mode == "on" %}                                    
                {% set ns.activityname = "Kinking" %}   
              {% else %}                      
                {% set ns.activityname = "Chilling" %}   
              {% endif %}
            {% elif partnershome > 0 %}
              {% if kink_mode == "on" %}                                    
                {% set ns.activityname = "Playing" %}
              {% elif room in ns.active_chromecasts_room %}   
                {% set ns.activityname = "Watching TV"  %}
              {% elif is_computer_active  == "True" and room == "hotbox" %}
                  {% if maxis_current_game != "idle" %}
                    {%set ns.activityname = "Gaming"%}
                  {% else %}                    
                    {%set ns.activityname = "Using the Computer"%}
                  {% endif %}
              {% elif shower_in_usage == "on" and room == "bathroom" %}                                               
                {% set ns.activityname = "Showering" %}
              {% elif ns.active_speakers_room | length > 0 and room in ns.active_speakers_room%}    
                {% set ns.activityname = "Listening to Music"  %}     
              {% elif cooking_mode == "on" and room == "kitchen" %}                                     
                {% set ns.activityname = "Cooking" %}
              {% elif phone_in_use == true %}                               
                {% set ns.activityname = "Using Phone" %}  
              {% elif vacuum_cleaning == true %}                               
                {% set ns.activityname = "Cleaning" %}   
              {% endif %}
            {% else %}            
              {% if is_computer_active  == "True" and room == "hotbox" %}
                  {% if maxis_current_game != "idle" %}
                    {%set ns.activityname = "Gaming"%}
                  {% else %}                    
                    {%set ns.activityname = "Using the Computer"%}
                  {% endif %}  
              {% elif ns.active_chromecasts_room | length > 0 and room in ns.active_chromecasts_room%}    
                {% set ns.activityname = "Watching TV"  %}     
              {% elif shower_in_usage == "on" and room == "bathroom" %}                                               
                {% set ns.activityname = "Showering" %} 
              {% elif ns.active_speakers_room | length > 0 and room in ns.active_speakers_room%}    
                {% set ns.activityname = "Listening to Music"  %}
              {% elif cooking_mode == "on" and room == "kitchen" %}                                     
                {% set ns.activityname = "Cooking" %}    
              {% elif phone_in_use == true %}                               
                {% set ns.activityname = "Using Phone" %}  
              {% elif vacuum_cleaning == true %}                               
                {% set ns.activityname = "Cleaning" %}       
             {% endif %} 
            {% endif %}
            {{ns.activityname }}                   
      - name: "Maxi current Activity"
        unique_id: maxi_current_activity
        state: >-
            {% set ns = namespace( activityname="unsure", mediaactiverooms=[],lasttvactiveroom = states('sensor.last_active_room'), active_sleepers_amount=0, allowed_ids=[],active_sleeper_rooms=[], motion_sensors=[], room = states.sensor.maxi_location.state, active_motion_sensors = [] ) %}  {# create a namespace object to store variables #}
            {% set room = states('sensor.maxi_location') %}
            {% set partnershome = states('sensor.amount_partners_home') | int  %}
            {% set friendshome = states('sensor.amount_friends_home') | int  %} {# Set friendshome to the amount of people #} 
            {% set peoplehome = states('sensor.amount_people_home') | int   %}{# Set peoplehome to the amount of people #}
            {% set ns.active_sleepers_amount = states('sensor.active_sleeper_amount') | int %}
            {% set ns.active_chromecasts_room = state_attr('sensor.active_media_playback', 'chromecasts')  %}   


            {% if states.binary_sensor.maxi_alone.state == "on" %}  {# if the maxi_alone sensor is on, indicating there is only maxi present #}

                {# Set the activity as gaming if a game is launched #}
                {% if states('sensor.is_maxi_asleep') == "asleep" %}          
                      {% set ns.activityname = "Sleeping"  %}          
                {% elif states('sensor.maxis_current_game') != "idle" %}          
                      {% set ns.activityname = "Playing a video game" %}          
                {% elif room == "lounge" and states('sensor.maxi1134_8202') != "idle" %}         
                      {% set ns.activityname = "Using the computer" %}          
                {% elif ns.activityname == "unsure" %}    
                  {% if ns.active_chromecasts_room | length > 0 %}                    
                  {# Check if I am in a room with mediaplayback #}
                  {% for activeroom in ns.active_chromecasts_room %}
                    {% if ns.room in activeroom %}                                                       
                  {% set ns.activityname = "Watching TV in the " + room %}
                    {% endif %}
                  {% endfor %}          
                    {% if ns.activityname == "unsure" %}                        
                      {% set ns.activityname = "Watching TV in the " + ns.lasttvactiveroom %}
                      {% endif %}
                  {% endif %}
                {% endif %} 



            {% elif states.binary_sensor.maxi_alone.state == "off" %}  {# if the maxi_alone sensor is off, it indicates that there is more than maxi present #}
              {% if  (friendshome == 0   and partnershome > 0 ) or ( ns.active_sleepers_amount >=  peoplehome )  %} {# If mor than one user is home, and no guest are there.  #}
                      {# Need to greatly expand this to know what we are doing #}
                    {% if states('sensor.is_maxi_asleep') == "asleep"%}        {# if maxi is sleeping #}   
                        {% set ns.activityname = "Sleeping"  %}             
                    {% elif ns.active_sleepers_amount < partnershome and states('sensor.is_maxi_asleep') == "awake" %} {# Trigger if less people are asleep than are present and that is not maxi #}
                        {% if room in ns.active_chromecasts_room %}
                            {% set ns.activityname = "Watching TV with girls in the " + room %}     
                        {% elif states('zone.home') == 2 and states('person.alexe') == home and room == "closet" and states('input_boolean.sleeper_in_closet') == "off" %}
                            {% set ns.activityname = "Playtime" %}                
                        {% elif states('zone.home') == 2 and states('person.myriam') == home and room == "closet" and states('input_boolean.sleeper_in_closet') == "off" %}
                            {% set ns.activityname = "Playtime" %}            {% else %}
                            {% set ns.activityname = "With girls in the " + room %}
                        {% endif %}
                    {% elif ns.active_sleepers_amount >=  partnershome  and states('sensor.is_maxi_asleep') == "awake" %} {# if more sleepers than users and maxi is awake#}
                        {% if states('sensor.maxis_current_game') != "idle" %}          
                          {% set ns.activityname = "Playing " +  states('sensor.maxis_current_game') %}         
                        {% elif room == "lounge" and states('sensor.maxi1134_8202') != "idle" %}    
                          {% set ns.activityname = "Using the computer" %}
                        {% elif room in ns.active_chromecasts_room %}
                            {% set ns.activityname = "Watching TV in the " + room %}  
                        {% else %}
                            {% set ns.activityname = "todetermine" %}  
                        {% endif %}  
                    {% endif %}        
              {% elif friendshome > 0    %}     {# if we have more people over than users #}{# assume a chilling #}
                        {% set ns.activityname = "Chilling" %}
              {% else %}
              {% endif %}                      
            {% else %}
              EDGECASE
            {% endif %}
            {{ns.activityname }}            
      - name: "plex token"
        unique_id: plex_token
        state: !secret plex_token


      - name: "Maxi Location v3"
        unique_id: maxi_location_v3
        state: >-
            {% set braceletroom = states('sensor.b7bracelet1') %}
            {% set watchroom = states('sensor.watch_galaxy4') %}
            {% set watchonbody = states('binary_sensor.galaxy_watch_4_on_body_sensor') %}
            {% set gpslocation = states('device_tracker.phone_maxi') %}
            {% set lastactiveroom = states('sensor.last_active_room') %}
            {% set maxialone = states('binary_sensor.maxi_alone') %}
            {% if maxialone == "off" %}
              {% if watchonbody == "on" and watchroom != "not_home" %}                   
                {% set location = watchroom %}
              {% elif braceletroom != "not_home" %}      
                {% set location = braceletroom %}
              {% elif gpslocation != "not_home"%}
                {% set location = "At " + gpslocation %}
              {% else %}
                {% set location = unknown %}
              {% endif %}
            {% else %}
                {% set location = lastactiveroom %}
            {% endif %}
            {{ location.split ("_")  | first }}

#     - name: "Maxi Location v4"
#       unique_id: maxi_location_v4
#       state: >-
#           {% set ns = namespace(counted_list=[]) %}       
#           {% set lastactiveroom = states('sensor.last_active_room') %}     
#           {% set maxialone = states('binary_sensor.maxi_alone') %}
#           {% set braceletroom = states('sensor.b7bracelet1') %}
#           {% set braceletespresenseroom = states('device_tracker.maxi_bracelet_espresense') | lower%}
#             {% if braceletroom == braceletespresenseroom %}
#                 {% set final_bracelet_room = braceletespresenseroom %}
#               {% else %}
#                 {% set final_bracelet_room = braceletroom %}
#             {% endif %}            
#           {% set watchroom = states('sensor.watch_galaxy4') | lower %}
#           {% set watchespresenseroom = states('device_tracker.maxi_watch_4_espresense') | lower %}
#           {% set watchonbody = states('binary_sensor.galaxy_watch_4_on_body_sensor')| lower %}
#           {% if (watchroom == watchespresenseroom) and (watchonbody =="on")%}
#                 {% set final_watch_room = watchespresenseroom %}
#               {% else %}
#                 {% set final_watch_room = watchroom %}
#             {% endif %}              
#           {% set phoneroom = states('sensor.phone_s24') | lower%}
#           {% set phoneespresenseroom = states('device_tracker.maxi_phone_s24_espresense') | lower%}
#           {% if phoneroom == phoneespresenseroom %}
#                 {% set final_phone_room = phoneespresenseroom %}
#               {% else %}
#                 {% set final_phone_room = phoneroom %}
#             {% endif %}           
#           {% set gpslocation = states('device_tracker.phone_maxi') | lower %}            
#           {% set in_home_positions_array = [final_bracelet_room]  + [final_phone_room] %}            
#           {% if watchonbody == 'on' %}
#             {% set in_home_positions_array = in_home_positions_array +  [final_watch_room] %}
#           {% endif %}            
#           {% if maxialone == 'on' %}
#             {% set in_home_positions_array = in_home_positions_array +  [lastactiveroom] %}
#           {% endif %}             
#           {% if gpslocation == 'home' and in_home_positions_array | unique | list | length == 1 %}
#              {{in_home_positions_array | unique | first }}
#           {% elif in_home_positions_array | unique | list | length > 1 %}
#             {% for rooms in  (in_home_positions_array | unique | list) %}
#                {% set ns.counted_list =  ns.counted_list + [{'name': rooms , "amount": in_home_positions_array | select('search', rooms)  | list | count }] %}
#             {% endfor %}
#           {% endif %}
#           {% set sorted_list = ns.counted_list|sort(attribute='amount', reverse=true) %}
#           {{(sorted_list |  map(attribute='name')) | list  | first }}

      - name: "Maxi Location v5"
        unique_id: maxi_location_v5
        state: >-
            {% set ns = namespace(most_seen_room='') %}       
            {% set lastactiveroom = states('sensor.last_active_room') %}     
            {% set maxialone = states('binary_sensor.maxi_alone') %}
            {% set braceletroom = states('sensor.b7bracelet1') %}
            {% set braceletespresenseroom = states('device_tracker.maxi_bracelet_espresense') | lower%}            
            {% set gpslocation = states('device_tracker.phone_maxi') | lower %}     
            
              {% if braceletroom == braceletespresenseroom %}
                  {% set final_bracelet_room = braceletespresenseroom %}
                {% else %}
                  {% set final_bracelet_room = braceletroom %}
              {% endif %}   
              
            {% set watchroom = states('sensor.watch_galaxy4') | lower %}
            {% set watchespresenseroom = states('device_tracker.maxi_watch_4_espresense') | lower %}
            {% set watchonbody = states('binary_sensor.galaxy_watch_4_on_body_sensor')| lower %}
            
            {% if (watchroom == watchespresenseroom) and (watchonbody =="on")%}
                  {% set final_watch_room = watchespresenseroom %}
                {% else %}
                  {% set final_watch_room = watchroom %}
              {% endif %}     
              
            {% set phoneroom = states('sensor.phone_s24') | lower%}
            {% set phoneespresenseroom = states('device_tracker.maxi_phone_s24_espresense') | lower%}
            
            {% if phoneroom == phoneespresenseroom %}
                  {% set final_phone_room = phoneespresenseroom %}
                {% else %}
                  {% set final_phone_room = phoneroom %}
              {% endif %}    
                     
            {% set in_home_positions_array = [final_bracelet_room]  + [final_phone_room] %}   
            
            {% if watchonbody == 'on' %}
              {% set in_home_positions_array = in_home_positions_array +  [final_watch_room] %}
            {% endif %}  
            
            {% if maxialone == 'on' %}
              {% set in_home_positions_array = in_home_positions_array +  [lastactiveroom] %}
            {% endif %}    
            
            {% if gpslocation == 'home' and in_home_positions_array | unique | list | length == 1 %}
                 {% set ns.most_seen_room =  in_home_positions_array | unique | first %}
            {% elif gpslocation == 'home' and in_home_positions_array | unique | list | length > 1 %}
                 {% set ns.most_seen_room =  in_home_positions_array |  statistical_mode  %}
            {% endif %}
            
            {{ns.most_seen_room }}
      - name: "Myriam Tablet Location Compounded"
        unique_id: myriam_talet_location_compounded
        state: >-
            {% set info = [('tablet', 'sensor.bermuda_myriam_tablet_bps_zone', 'sensor.bermuda_myriam_tablet_area')] %}               
            {% set ns = namespace(rooms=[], results=[]) %}
            {% for name, room, sensor in info                                           
            %}
              {% set room, sensor = (room, sensor) | map('states') | map('lower') | list %}
                {% if room != 'not_home' and room != 'main floor' and room  != 'unknown' and room  != 'home' and room!= 'unavailable' %}
                  {% set ns.rooms = ns.rooms + [(name, room.split('_').0)] %}
                {% endif %}                
                {% if sensor != 'not_home' and sensor != 'main floor' and sensor  != 'unknown' and sensor  != 'home' and sensor != 'unavailable' %}
                  {% set ns.rooms = ns.rooms + [(name, sensor.split('_').0)] %}
                {% endif %}              
            {% endfor %}           
            {% for room, items in ns.rooms | groupby(attribute='1') %}
               {% set ns.results = ns.results + [(room, items | map(attribute='0') | list | length)] %}
            {% endfor %}            
              {{ ns.results | sort(attribute='1', reverse=True) | map(attribute='0') | first | default }}

      - name: "Maxi Location by petro_old"
        unique_id: maxi_location_by_petro_old
        state: >-
            {% set info = [
              ('watch', 'device_tracker.maxi_watch_4_espresense', 'sensor.watch_galaxy4'),
              ('bracelet', 'device_tracker.maxi_bracelet_espresense', 'sensor.b7bracelet1'),
              ('phone', 'device_tracker.maxi_phone_s24_espresense', 'sensor.phone_s24'),
              
            ] %}          
            {% set gpslocation = states('device_tracker.phone_maxi') | lower %}         
            {% set ns = namespace(rooms=[], results=[]) %}
            {% for name, room, sensor in info if (name == 'watch' and is_state('binary_sensor.galaxy_watch_4_on_body_sensor', 'on') and is_state('sensor.galaxy_watch4_2n0f_charger_type', 'none') ) or 
                                                 (name == 'phone' and is_state('sensor.phone_maxi_charger_type', 'none') and is_state('binary_sensor.phone_maxi_interactive', 'on')) or
                                                 (name == 'bracelet' )                                                     
            %}
              {% set room, sensor = (room, sensor) | map('states') | map('lower') | list %}
                {% if room != 'not_home' and room != 'main floor' and room  != 'unknown' and room  != 'home' and room!= 'unavailable' %}
                  {% set ns.rooms = ns.rooms + [(name, room.split('_').0)] %}
                {% endif %}                
                {% if sensor != 'not_home' and sensor != 'main floor' and sensor  != 'unknown' and sensor  != 'home' and sensor != 'unavailable' %}
                  {% set ns.rooms = ns.rooms + [(name, sensor.split('_').0)] %}
                {% endif %}              
            {% endfor %}
            {% if is_state('binary_sensor.maxi_alone', 'on') %}
              {% set ns.rooms = ns.rooms + [('last',states('sensor.last_active_room')|lower)] %}
            {% endif %}            
            {% for room, items in ns.rooms | groupby(attribute='1') %}
               {% set ns.results = ns.results + [(room, items | map(attribute='0') | list | length)] %}
            {% endfor %}            
            {% if is_state('device_tracker.phone_maxi', 'home') %}
              {{ ns.results | sort(attribute='1', reverse=True) | map(attribute='0') | first | default }}
            {% elif gpslocation != "home" and gpslocation != "away" %}
              At {{gpslocation}}
            {% else %}
              not_home
            {% endif %}  
        attributes:
          rooms: >
            {% set info = [
              ('watch', 'device_tracker.watch_galaxy4', 'sensor.watch_galaxy4'),
              ('bracelet', 'device_tracker.b7bracelet1', 'sensor.b7bracelet1'),
              ('phone', 'device_tracker.phone_s24', 'sensor.phone_s24'),
              ('watch_espresense', 'device_tracker.maxi_watch_4_espresense', 'sensor.maxi_watch_4_espresense'),
              ('bracelet_espresense', 'device_tracker.maxi_bracelet_espresense', 'sensor.maxi_bracelet_espresense'),
              ('phone_espresense', 'device_tracker.maxi_phone_s24_espresense', 'sensor.maxi_phone_s24_espresense'),
              
            ] %}       
            {% set gpslocation = states('device_tracker.phone_maxi') | lower %}         
            {% set ns = namespace(rooms=[], results=[]) %}
            {% for name, room, sensor in info if ( name != 'watch' or (name == 'watch' and is_state('binary_sensor.galaxy_watch_4_on_body_sensor', 'on') and is_state('sensor.galaxy_watch4_2n0f_charger_type', 'none') )) and (name != 'phone' or (name == 'phone' and is_state('sensor.phone_maxi_charger_type', 'none') and is_state('binary_sensor.phone_maxi_interactive', 'on') )) %}
              {% set room, sensor = (room, sensor) | map('states') | map('lower') | list %}
                {% if room != 'not_home' and room != 'main floor' and room  != 'unknown' and room  != 'home' and room!= 'unavailable' %}
                  {% set ns.rooms = ns.rooms + [(name, room)] %}
                {% endif %}                
                {% if sensor != 'not_home' and sensor != 'main floor' and sensor  != 'unknown' and sensor  != 'home' and sensor != 'unavailable' %}
                  {% set ns.rooms = ns.rooms + [(name, sensor)] %}
                {% endif %}              
            {% endfor %}
            {% if is_state('binary_sensor.maxi_alone', 'on') %}
              {% set ns.rooms = ns.rooms + [('last',states('sensor.last_active_room')|lower)] %}
            {% endif %}            
            {% for room, items in ns.rooms | groupby(attribute='1') %}
               {% set ns.results = ns.results + [(room, items | map(attribute='0') | list )] %}
            {% endfor %}   
            {%- for room, devices in ns.results %}
              '{{ room }}': {{ devices | tojson | replace('[','(') | replace(']',')') }}{{ ',' if not loop.last }}
            {%- endfor %}




      - name: "Maxi Location by petro"
        unique_id: maxi_location_by_petro
        state: >-
            {% set info = [
              ('watch', 'sensor.bermuda_maxi_watch_bps_zone', 'sensor.bermuda_maxi_watch_area'),
              ('bracelet', 'sensor.bermuda_maxi_ankle_monitor_bps_zone', 'sensor.bermuda_maxi_ankle_monitor_area'),
              ('phone', 'sensor.bermuda_maxi_phone_bps_zone', 'sensor.bermuda_maxi_phone_area'),
              
            ] %}          
            {% set gpslocation = states('device_tracker.phone_maxi') | lower %}         
            {% set ns = namespace(rooms=[], results=[]) %}
            {% for name, room, sensor in info if (name == 'watch' and is_state('binary_sensor.galaxy_watch_4_on_body_sensor', 'on') and is_state('sensor.galaxy_watch4_2n0f_charger_type', 'none') ) or 
                                                 (name == 'phone' and is_state('sensor.phone_maxi_charger_type', 'none') and is_state('binary_sensor.phone_maxi_interactive', 'on')) or
                                                 (name == 'bracelet' )                                                     
            %}
              {% set room, sensor = (room, sensor) | map('states') | map('lower') | list %}
                {% if room != 'not_home' and room != 'main floor' and room  != 'unknown' and room  != 'Unknown' and room  != 'home' and room!= 'unavailable' %}
                  {% set ns.rooms = ns.rooms + [(name, room.split('_').0)] %}
                {% endif %}                
                {% if sensor != 'not_home' and sensor != 'main floor' and sensor  != 'unknown' and room  != 'Unknown' and sensor  != 'home' and sensor != 'unavailable' %}
                  {% set ns.rooms = ns.rooms + [(name, sensor.split('_').0)] %}
                {% endif %}              
            {% endfor %}
            {% if is_state('binary_sensor.maxi_alone', 'on') %}
              {% set ns.rooms = ns.rooms + [('last',states('sensor.last_active_room')|lower)] %}
            {% endif %}            
            {% for room, items in ns.rooms | groupby(attribute='1') %}
               {% set ns.results = ns.results + [(room, items | map(attribute='0') | list | length)] %}
            {% endfor %}            
            {% if is_state('device_tracker.phone_maxi', 'home') %}
              {{ ns.results | sort(attribute='1', reverse=True) | map(attribute='0') | first | default }}
            {% elif gpslocation != "home" and gpslocation != "away" %}
              At {{gpslocation}}
            {% else %}
              not_home
            {% endif %}  
        attributes:
          rooms: >
            {% set info = [
              ('watch', 'sensor.bermuda_maxi_watch_bps_zone', 'sensor.bermuda_maxi_watch_area'),
              ('bracelet', 'sensor.bermuda_maxi_ankle_monitor_bps_zone', 'sensor.bermuda_maxi_ankle_monitor_area'),
              ('phone', 'sensor.bermuda_maxi_phone_bps_zone', 'sensor.bermuda_maxi_phone_area'),
              
            ] %}        
            {% set gpslocation = states('device_tracker.phone_maxi') | lower %}         
            {% set ns = namespace(rooms=[], results=[]) %}
            {% for name, room, sensor in info if ( name != 'watch' or (name == 'watch' and is_state('binary_sensor.galaxy_watch_4_on_body_sensor', 'on') and is_state('sensor.galaxy_watch4_2n0f_charger_type', 'none') )) and (name != 'phone' or (name == 'phone' and is_state('sensor.phone_maxi_charger_type', 'none') and is_state('binary_sensor.phone_maxi_interactive', 'on') )) %}
              {% set room, sensor = (room, sensor) | map('states') | map('lower') | list %}
                {% if room != 'not_home' and room != 'main floor' and room  != 'unknown' and room  != 'home' and room!= 'unavailable' %}
                  {% set ns.rooms = ns.rooms + [(name, room)] %}
                {% endif %}                
                {% if sensor != 'not_home' and sensor != 'main floor' and sensor  != 'unknown' and sensor  != 'home' and sensor != 'unavailable' %}
                  {% set ns.rooms = ns.rooms + [(name, sensor)] %}
                {% endif %}              
            {% endfor %}
            {% if is_state('binary_sensor.maxi_alone', 'on') %}
              {% set ns.rooms = ns.rooms + [('last',states('sensor.last_active_room')|lower)] %}
            {% endif %}            
            {% for room, items in ns.rooms | groupby(attribute='1') %}
               {% set ns.results = ns.results + [(room, items | map(attribute='0') | list )] %}
            {% endfor %}   
            {%- for room, devices in ns.results %}
              '{{ room }}': {{ devices | tojson | replace('[','(') | replace(']',')') }}{{ ',' if not loop.last }}
            {%- endfor %}

      - name: "Myriam Location by petro"
        unique_id: mmyriam_location_by_petro
        state: >-
            {% set info = [
              ('phone', 'device_tracker.myriam_s24_espresense', 'sensor.bermuda_myriam_phone_area'),
              
            ] %}          
            {% set gpslocation = states('device_tracker.phone_myriam_gps') | lower %}         
            {% set ns = namespace(rooms=[], results=[]) %}

            {% for name, room, sensor in info  %}
              {% set room, sensor = (room, sensor) | map('states') | map('lower') | list %}
                {% if room != 'not_home' and room != 'main floor' and room  != 'unknown' and room  != 'home' and room!= 'unavailable' %}
                  {% set ns.rooms = ns.rooms + [(name, room.split('_').0)] %}
                {% endif %}                
                {% if sensor != 'not_home' and sensor != 'main floor' and sensor  != 'unknown' and sensor  != 'home' and sensor != 'unavailable' %}
                  {% set ns.rooms = ns.rooms + [(name, sensor.split('_').0)] %}
                {% endif %}              
            {% endfor %}
            {% if is_state('binary_sensor.myriam_alone', 'on') %}
              {% set ns.rooms = ns.rooms + [('last',states('sensor.last_active_room')|lower)] %}
            {% endif %}            
            {% for room, items in ns.rooms | groupby(attribute='1') %}
               {% set ns.results = ns.results + [(room, items | map(attribute='0') | list | length)] %}
            {% endfor %}            
            {% if is_state('device_tracker.phone_myriam_gps', 'home') %}
              {{ ns.results | sort(attribute='1', reverse=True) | map(attribute='0') | first | default }}
            {% elif gpslocation != "home" and gpslocation != "away" %}
              At {{gpslocation}}
            {% else %}
              not_home
            {% endif %}  